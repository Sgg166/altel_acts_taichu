# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.24)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS linenoiseng getopt rapidjson mycommon altel-data-event altel-data-root eudaq_core_only altel-data-eudaq altel-data galogen altel-telgl altel-telfw pede altel-mille altelMilleBin_json altelGeoUpdate altel-acts sensor-firmware-builtinJSON-headers altel-frontend rbcptool tcpcontool datatool taichu-teldaq-builtinJSON-headers altel-rbcp eudaq_module_altel TelDetectorResidual TelKinkAngle altelTelEventViewer altelEudaqRawViewer altelDataTaking altelConvert altelConvert2josn altelActsTrack altelMilleBin test)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target linenoiseng
add_library(linenoiseng STATIC IMPORTED)

set_target_properties(linenoiseng PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target getopt
add_library(getopt STATIC IMPORTED)

set_target_properties(getopt PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target rapidjson
add_library(rapidjson INTERFACE IMPORTED)

set_target_properties(rapidjson PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/rapidjson"
)

# Create imported target mycommon
add_library(mycommon INTERFACE IMPORTED)

set_target_properties(mycommon PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "dl;Threads::Threads;linenoiseng;getopt;rapidjson;\$<\$<AND:\$<CXX_COMPILER_ID:GNU>,\$<AND:\$<VERSION_LESS:\$<CXX_COMPILER_VERSION>,9.0>,\$<VERSION_GREATER:\$<CXX_COMPILER_VERSION>,5.3>>>:stdc++fs>"
)

# Create imported target altel-data-event
add_library(altel-data-event INTERFACE IMPORTED)

set_target_properties(altel-data-event PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target altel-data-root
add_library(altel-data-root SHARED IMPORTED)

set_target_properties(altel-data-root PROPERTIES
  INTERFACE_LINK_LIBRARIES "altel-data-event;ROOT::Core;ROOT::RIO;ROOT::Tree"
)

# Create imported target eudaq_core_only
add_library(eudaq_core_only SHARED IMPORTED)

set_target_properties(eudaq_core_only PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<\$<AND:\$<CXX_COMPILER_ID:GNU>,\$<AND:\$<VERSION_LESS:\$<CXX_COMPILER_VERSION>,9.0>,\$<VERSION_GREATER:\$<CXX_COMPILER_VERSION>,5.3>>>:stdc++fs>"
)

# Create imported target altel-data-eudaq
add_library(altel-data-eudaq SHARED IMPORTED)

set_target_properties(altel-data-eudaq PROPERTIES
  INTERFACE_LINK_LIBRARIES "altel-data-event;eudaq::core"
)

# Create imported target altel-data
add_library(altel-data INTERFACE IMPORTED)

set_target_properties(altel-data PROPERTIES
  INTERFACE_LINK_LIBRARIES "mycommon;altel-data-event;altel-data-root;altel-data-eudaq"
)

# Create imported target galogen
add_library(galogen STATIC IMPORTED)

set_target_properties(galogen PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target altel-telgl
add_library(altel-telgl SHARED IMPORTED)

set_target_properties(altel-telgl PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "galogen;OpenGL::GL;Eigen3::Eigen"
)

# Create imported target altel-telfw
add_library(altel-telfw SHARED IMPORTED)

set_target_properties(altel-telfw PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "glfw;altel-telgl"
)

# Create imported target pede
add_executable(pede IMPORTED)

# Create imported target altel-mille
add_library(altel-mille STATIC IMPORTED)

set_target_properties(altel-mille PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "Eigen3::Eigen;\$<LINK_ONLY:mycommon>"
)

# Create imported target altelMilleBin_json
add_executable(altelMilleBin_json IMPORTED)

# Create imported target altelGeoUpdate
add_executable(altelGeoUpdate IMPORTED)

# Create imported target altel-acts
add_library(altel-acts SHARED IMPORTED)

set_target_properties(altel-acts PROPERTIES
  INTERFACE_LINK_LIBRARIES "ActsCore;altel-data"
)

# Create imported target sensor-firmware-builtinJSON-headers
add_library(sensor-firmware-builtinJSON-headers INTERFACE IMPORTED)

# Create imported target altel-frontend
add_library(altel-frontend SHARED IMPORTED)

set_target_properties(altel-frontend PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "sensor-firmware-builtinJSON-headers;mycommon;stdc++fs;altel-data"
)

# Create imported target rbcptool
add_executable(rbcptool IMPORTED)

# Create imported target tcpcontool
add_executable(tcpcontool IMPORTED)

# Create imported target datatool
add_executable(datatool IMPORTED)

# Create imported target taichu-teldaq-builtinJSON-headers
add_library(taichu-teldaq-builtinJSON-headers INTERFACE IMPORTED)

# Create imported target altel-rbcp
add_library(altel-rbcp SHARED IMPORTED)

set_target_properties(altel-rbcp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "altel-data-event"
)

# Create imported target eudaq_module_altel
add_library(eudaq_module_altel SHARED IMPORTED)

set_target_properties(eudaq_module_altel PROPERTIES
  INTERFACE_LINK_LIBRARIES "eudaq::core;altel-rbcp;mycommon"
)

# Create imported target TelDetectorResidual
add_executable(TelDetectorResidual IMPORTED)

# Create imported target TelKinkAngle
add_executable(TelKinkAngle IMPORTED)

# Create imported target altelTelEventViewer
add_executable(altelTelEventViewer IMPORTED)

# Create imported target altelEudaqRawViewer
add_executable(altelEudaqRawViewer IMPORTED)

# Create imported target altelDataTaking
add_executable(altelDataTaking IMPORTED)

# Create imported target altelConvert
add_executable(altelConvert IMPORTED)

# Create imported target altelConvert2josn
add_executable(altelConvert2josn IMPORTED)

# Create imported target altelActsTrack
add_executable(altelActsTrack IMPORTED)

# Create imported target altelMilleBin
add_executable(altelMilleBin IMPORTED)

# Create imported target test
add_executable(test IMPORTED)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/altel_actsTargets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
    if(NOT EXISTS "${_cmake_file}")
      message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
